1.shell中数组和字典的用法:
[root@localhost ~]# cat shell_array_and_dic_method.sh 
#!/bin/bash
echo "--------------------------------------------------"
#1.shell中的数组
array_info=('glk' '29' 'guolikai@yanxiu.com')
echo "打印数组第一个元素:${array_info[0]}"
echo "打印数组第一个元素:${array_info[1]}"
echo "打印数组第一个元素:${array_info[2]}"
echo "打印数组的长度:${#array_info[@]}"
echo "遍历数组值:"
for i in $(seq 0 $[${#array_info[@]}-1])
do
    echo ${array_info[$i]}
done

echo "--------------------------------------------------"
#2.shell中的字典
#先申明字典，再定义字典
declare -A Info
Info=([name]='glk' [age]='29' [Address]='guolikai@yanxiu.com')

echo "打印指定key的value:${Info[name]}"
echo "打印所有key值:${!Info[*]}"
echo "打印所有value值:${Info[*]}"

echo "遍历字典key值:"
for key in $(echo ${!Info[*]})
do
    echo "${key}:${Info[${key}]}"
done
echo "--------------------------------------------------"


2.screen命令：
screen -S beifenmingcheng
输入执行命令
退出终端并终止： crtl+D
退出终端加后台运行：crtl+alt+A 

3.定时任务
[root@localhost ~]# crontab -l
0 1 * * * nohup /usr/bin/rsync -aP --password-file=/etc/pw root@172.16.1.100:data/data1/*  /App/data/172.16.1.100_data  &
#Test By GuoLikai:数据库备份
01  00 * * *  /bin/bash /App/script/OPS/xtrabackup/mariadb-xtrabackup_3306.sh &> /dev/null
01  01 * * *  mysqldump -uroot -p'mima' -S /tmp/mariadb_3306.sock -A -B --events --master-data=1 --single-transaction >  /App/backup/mariadb/mariadb_3306_all_databases_`date -d '0 days' +'\%Y\%m\%d-\%H\%M\%S'`.sql
[root@localhost ~]# cat /etc/pw
shangchaunmima


4.linux-密码忘记处理办法:
开机按e键，找到一个叫linux16行 添加rd.break console=tty0
按ctrl + x  
mount -o remount,rw /sysroot        #重新挂载/sysroot
chroot /sysroot                     #进入chroot
# echo '密码' |passwd --stdin root  #修改密码
<1>.vim /etc/sysconf/selinux   禁用selinux
<2>.touch /.autorelabel    #告知selinux 
mkdir -p /App/{backup,build,conf,data,install,log,mnt,opt,scripts,src,srt,sync}/{OPS,SRT}

5.shell 输出重复字符串
[root@localhost ~]# str=$(printf "%80s" "-")
[root@localhost ~]# echo "${str// /-}"
%80s 表示输出8个字符的字符串, 不够8个字符右对齐。

6.rsync命令：
rsync -avP --exclude='panel.war/'  /usr/local/jboss1/server/default/deploy/*  10.10.20.49:/usr/local/jboss1/server/default/deploy/


7.Sed使用技巧:
#替换带特殊字符的语句
sed -i "s#/root/.influxdb#/App/data/OPS/influxdb#g" /App/conf/OPS/influxdb/influxdb.conf
#替换指定行的下一行
sed -i "/^\[admin\]/{n;s/false/true/}" /App/conf/OPS/influxdb/influxdb.conf

vim编辑时替换 ":%s/old/new/g"

8.Cut使用技巧:



9. Awk使用技巧:
<1>.求和
cat data|awk '{sum+=$1} END {print "Sum = ", sum}'
<2>.求平均
cat data|awk '{sum+=$1} END {print "Average = ", sum/NR}'
<3>.求最大值
cat data|awk 'BEGIN {max = 0} {if ($1>max) max=$1 fi} END {print "Max=", max}'
<4>.求最小值（min的初始值设置一个超大数即可）
awk 'BEGIN {min = 1999999} {if ($1<min) min=$1 fi} END {print "Min=", min}'
<5>.应用
过滤IP ifconfig eth0 | grep "inet addr:" | awk '{print $2}' | awk -F: '{print $2}'
提取根分区使用率 df -hT / | tail -1 | awk '{print $6}'
读取数据求和：du -s /data/mysql/3306/data/bin* |awk '{a+=$1}END{print a/1024/1024}'
HOST=`/sbin/ifconfig eth0 |grep "inet addr" |awk -F[:" "] '{print $13}'` 
#----------------------------------------------------------------------------------------------------------
#获取nginx访问日志404的url并按降序排序，取最高10条
cat  test.log | awk -F' ' '{if($9=404)print $9,$11}' | sort |uniq -c | sort -nr | grep -v - | head -10
#----------------------------------------------------------------------------------------------------------

10.Git使用命令:
《git &github 快速入门》 http://www.cnblogs.com/alex3714/articles/5930846.html 
git clone https://github.com/guolikai/
git status
git fetch origin master           #该指令意思是从远程origin仓库的master主分支更新最新的版本到origin/master分支上
git log --pretty=oneline          #git log命令显示从最近到最远的提交日志
git reset --hard version_num      #指定回到某个版本
git log -p master..origin/master  #执行的回显结果会详细列出这两个分支的差异
git reflog                        #记录每一次每一次命令
git merge origin/master           #合并
git push origin master            #提交
在本地打开“终端”
输入“git init”，让本地git初始化
输入“git add 111.txt”，将本地111.txt添加到本地git中
输入“git commit -m ‘first Commit’ ”，将任务提交并填写提交日志信息
输入“git remote add origin https://github.com/gsb001/FirstPepo.git”，将远端https://github.com/gsb001/FirstPepo.git绑定到本地git上
输入“git push -u origin master”，将任务推送到远端origin的master分支上


11.脚本注释
#!/bin/bash
# ------------------------------------------------
# Filename:    grafana.sh
# Revision:    4.1.2
# Date:        2017-02-23
# Author:      GuoLikai
# Email:       glk73748196@sina.com
# Description: 
# Notes:       
# ------------------------------------------------

# ----------------- Export -------------------
export S_M_JID=$1
# ----------------- Variable -----------------
ScriptDir=$(cd $(dirname $0); pwd)
ScriptFile="$S_CURR_PATH/../bin/srt_online"
# ----------------- Include ------------------
. ${ScriptDir}/../sbin/online_tools
. ${ScriptDir}/../api/API_JobInfo
. ${ScriptDir}/../api/API_Distribute
# ----------------- Funciton -----------------
# FunNo: 01
# FunDescript: setup

# FunNo: 02
# FunDescript: setup
# ----------------- Main ---------------------
case "$1" in
    "status"    ) fstatus;;
    *           )
    echo "$ScriptFile status               状态 $AppName"
    ;;
esac

12.生成一个MD5密码，并更新之数据库思路
#1、生成一个MD5加密的密码
[root@localhost ~]# echo  -n "adminroot" | openssl md5 |awk -F' ' '{print $2}'
4b3626865dc6d5cfe1c60b855e68634a   
#2、更新数据库里的信息
    update user set password='4b3626865dc6d5cfe1c60b855e68634a' where userid='1';
