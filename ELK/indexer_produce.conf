input 
{
    redis {
    
        type => "nginx-access-outside-broker"
        host => "192.168.10.27"
        port => "6379"
        data_type => "list"
        key => "default_nginx_access_outside_list"
        threads => 5

    }
}

filter 
{
    grok {
        match => { "message" => ["\^(?<remote_addr>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\^(?<status>\d+)\^(%{TIMESTAMP_ISO8601:time_iso8601})\^(?<upstream_response_time>.*)\^(?<request_time>.*)\^(?<request_method>.*)\^(?<http_host_with_request_uri>.*)\^(?<body_bytes_sent>.*)\^(?<http_referer>.*)\^(?<http_user_agent>.*)\^(?<http_x_forwarded_for>.*)\^(?<request_body>.*)\^(.*)\^(?<yanxiu_passport>X-YanxiuPassport-Passport=.*)\^"] }
        remove_field => "message"
        remove_field => "[beat][hostname]"
        remove_field => "[beat][name]"
        remove_field => "[beat][version]"
    }

    #useragent {
    #    source => "http_user_agent"
    #    target => "user_agent"
    #    remove_field => "http_user_agent"
    #}

    #geoip {
    #    source => "remote_addr"
    #    target => "geoip"
    #    remove_field => ["[geoip][latitude]", "[geoip][longitude]", "[geoip][continent_code]", "[geoip][country_code2]", "[geoip][country_code3]", "[geoip][ip]", "[geoip][region_name]", "[geoip][timezone]"]
    #}
}

output
{
    if "_grokparsefailure" in [tags] {

       file { path => "/App/log/OPS/logstash/grokparsefailure-%{type}-%{+YYYY.MM.dd}.log" }

    }  

    if [type] == "logstash-nginx-access-outside" {

        elasticsearch {

            hosts => ["192.168.20.55"]
            manage_template => false
            index => "logstash-nginx-access-outside-index-%{+YYYY.MM.dd}"
        }   
    }
}
